function [matDir, userDefinedMatFiles] =  InitialiseFiles()

close all

%    Asking user for folder to work with. if folder contains lsm files a
%    matDir is created and initialises matlab variables to work with
[matDir] = GetMatDir();

% Changing to matFile directory
cd(matDir)

% Getting a list of all the mat files in the directory
matFilesVar=dir('*.mat');matFiles={matFilesVar.name};clear matFilesVar

% Getting the screen size to display the list dialogue box
set(0,'Units','pixels');
scnsize = get(0,'ScreenSize');
% User defined mat files
try
matFiles = SortMatFilesAccordingToDateThenFlyThenRun(matFiles);
catch
end

userMatFileIndices=listdlg('ListString',matFiles','ListSize',[0.5*scnsize(3) 0.5*scnsize(4)],'PromptString','Choose the Mat Files to analyse');
userDefinedMatFiles=matFiles(userMatFileIndices);



function [matDir] = GetMatDir()
baseDir = uigetdir;
[upperPath, baseDirName, ~] = fileparts(baseDir);
if findstr(baseDirName,'MatFiles')
    %  Checking if user accidentally selected the matFile Folder
    matDir=baseDir;
else
    % Checking if there is a matfile folder. if not creating one and filling it
    cd(baseDir);
    matFileFolderVar= dir('*MatFiles');
    if isempty(matFileFolderVar)
        matDir=MatFileInitialisation(baseDir);
        
    else
        folderSeparatorVariable = MakeFolderSeparatorVariable;
        matDir=[baseDir folderSeparatorVariable matFileFolderVar.name];
    end
end


function [matDir] =                                                       MatFileInitialisation(baseDir)
folderSeparatorVariable = MakeFolderSeparatorVariable;
cd(baseDir)
[upperPath, baseDirName, ~] = fileparts(baseDir);
mkdir([baseDir folderSeparatorVariable baseDirName  ' MatFiles'])
matDir= [baseDir folderSeparatorVariable baseDirName  ' MatFiles'];
[lsmFiles]= GetLsmFiles();

%     Setting up progress bar
h           = progressbar( [],0,'Please Wait','Initialising MatFiles' );
max_count   = length(lsmFiles);
%      Cycling through the lsmFiles and writing them to MatFiles in a
%      subsidiary folder.
for lsmFileListElement=1:length(lsmFiles)
    
    
    
    
    %          For Progress Bar:
    %------------------------
    fprintf( '%d\n',lsmFileListElement )';
    h = progressbar( h,1/max_count );
    %               if ~gui_active
    %                   break;
    %               end
    %-------------------------
    cd(baseDir)
    stackInfo=tiffread(lsmFiles{lsmFileListElement});
    
    cd(matDir)
    eval([ 'save ''' lsmFiles{lsmFileListElement}(1:end-4) ''' stackInfo ' ])
end
progressbar( h,-1 );



function [lsmFiles]=                                            GetLsmFiles()

% Getting the directory from which to analyse files
fileInfoInUserDefinedDirectory=dir;
fileNamesInUserDefinedDirectory={fileInfoInUserDefinedDirectory.name};
lsmFilesIndices=regexpcell(fileNamesInUserDefinedDirectory,'.lsm');
lsmFiles=fileNamesInUserDefinedDirectory(lsmFilesIndices);






